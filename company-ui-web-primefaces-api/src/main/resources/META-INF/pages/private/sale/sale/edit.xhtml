<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" 
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"   
      xmlns:h="http://xmlns.jcp.org/jsf/html"
      xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
      xmlns:p="http://primefaces.org/ui"
      xmlns:pe="http://primefaces.org/ui/extensions"
      xmlns:f="http://xmlns.jcp.org/jsf/core"
      xmlns:cyk="http://xmlns.jcp.org/jsf/composite/org.cyk.ui.web.primefaces/component"
      xmlns:company="http://xmlns.jcp.org/jsf/composite/org.cyk.ui.web.primefaces.company/component">
	
    <ui:decorate template="#{webPageLayoutManager.decoratedTemplate}">
        <ui:param name="pageController" value="#{saleEditPage}" />
        <ui:define name="body">
        	
        	<style>
				.quantityClass{
					
				}
				.quantityClass input{
					background: red;
					width: 85px !important;
				}
			</style>
			
			<cyk:formOneData value="#{saleEditPage.form}" rendered="#{saleEditPage.isFormOneSaleProduct}"/>
        	
        	<ui:fragment rendered="#{not saleEditPage.isFormOneSaleProduct}">
	        	<p:panelGrid id="optionsPanel" columns="9">
	        		<!--ui:include src="/org.cyk.ui.web.primefaces.company/include/sale/inputCashier.xhtml" /-->
	        		
	        		<p:outputLabel value="#{uiManager.text('model.entity.cashier')}" for="cashierf" />
	        		<p:selectOneMenu id="cashierf" value="#{saleEditPage.selectedCashier}" var="cashier"  converter="#{objectConverter}" 
	        			filter="true" filterMatchMode="contains" valueChangeListener="#{saleEditPage.cashierChangedListener}" disabled="#{saleEditPage.collectMoney}">
	        			<p:ajax event="change" process="cashierf" update="salableProduct" />
	        			<f:selectItems value="#{saleEditPage.cashiers}" />
	        			<p:column><h:outputText value="#{cashier.cashRegister.code}" /></p:column>
			            <p:column><h:outputText value="#{cashier.cashRegister.name}" /></p:column>
	        		</p:selectOneMenu>
	        		
	        		<p:outputLabel value="#{uiManager.text('model.entity.customer')}" for="customer" />
	        		<p:selectOneMenu id="customer" value="#{saleEditPage.selectedCustomer}" var="customer"  converter="#{objectConverter}" 
	        			filter="true" filterMatchMode="contains">
	        			<f:selectItems value="#{saleEditPage.customers}" var="c" itemLabel="#{c.person.names}"  />
	        			<p:column><h:outputText value="#{customer.registration.code}" /></p:column>
			            <p:column><h:outputText value="#{customer.person.names}" /></p:column>
	        		</p:selectOneMenu>
	        		
	        		<p:outputLabel value="#{uiManager.text('model.entity.product')}" for="salableProduct" />
	        		<p:selectOneMenu id="salableProduct" value="#{saleEditPage.selectedProduct}" var="salableProduct" converter="#{objectConverter}" 
	        			filter="true" filterMatchMode="contains" disabled="#{saleEditPage.collectMoney}">
	        			<f:selectItems value="#{saleEditPage.salableProducts}" />
	        			<p:column><h:outputText value="#{salableProduct.product.code}" /></p:column>
			            <p:column><h:outputText value="#{salableProduct.product.name}" /></p:column>
	        		</p:selectOneMenu>
	        		<cyk:command value="#{saleEditPage.saleProductCollection.addCommandable}"/>
	        		        		
	        		<p:commandButton id="cashButton" value="#{uiManager.text('command.cash')}" title="#{uiManager.text('command.cash')}" icon="ui-icon-calculator" 
	        			actionListener="#{saleEditPage.cash}" update="optionsPanel,:form:collection:datatable,moneyPanel" 
	        			disabled="#{saleEditPage.identifiable.saleProducts.size()==0 or saleEditPage.collectMoney}" />
	        		
	        		<p:commandButton id="collectButton" value="#{uiManager.text('command.collect')}" title="#{uiManager.text('command.collect')}" icon="ui-icon-cart" 
	        			actionListener="#{saleEditPage.sell}" update="optionsPanel,:form:collection:datatable,moneyPanel" disabled="#{saleEditPage.collectProduct}" 
	        			immediate="true" />	
	        			 		
	        	</p:panelGrid>
	        	
	        	<p:remoteCommand name="refreshFooter" update=":form:collection:datatable:grandtotal"/>
	        	
	        	<cyk:itemCollection id="collection" value="#{saleEditPage.saleProductCollection}" >
	 				<p:column headerText="#{uiManager.text('field.code')}" width="7%">
	 					<h:outputText value="#{item.code}" />
	 				</p:column>
	 				<p:column headerText="#{uiManager.text('field.name')}" >
	 					<h:outputText value="#{item.name}" />
	 				</p:column>
	 				<p:column headerText="#{uiManager.text('field.unit.price')}" width="10%">
	 					<h:outputText value="#{item.unitPrice}" />
	 				</p:column>
	 				<p:column headerText="#{uiManager.text('field.quantity')}" rendered="#{saleEditPage.showQuantityColumn}" width="10%">
	        			<pe:inputNumber id="quantity" value="#{item.quantity}" maxlength="5" required="true" requiredMessage="#{uiManager.text('input.value.required')}" 
	        				minValue="1" decimalPlaces="0" rendered="#{saleEditPage.collectProduct}" styleClass="quantityClass">
	        				<p:ajax event="change" listener="#{saleEditPage.productQuantityChanged(item)}" process="quantity" update="total,grandtotal" 
	        					oncomplete="refreshFooter();"/>
	        			</pe:inputNumber>
	        			<h:outputText value="#{saleProduct.quantity}" rendered="#{saleEditPage.collectMoney}" />
	        		</p:column>
	        		
	        		<p:column headerText="#{uiManager.text('field.price.total')}" width="12%">
	        			<h:outputText id="total" value="#{item.totalPrice}" rendered="#{item.identifiable.salableProduct.price!=null}" />
	        			<pe:inputNumber id="totalInput" value="#{item.totalPrice}" required="true" requiredMessage="#{item.name} - #{uiManager.textInputValueRequired('field.value')}" 
	        				minValue="1" decimalPlaces="0" rendered="#{item.identifiable.salableProduct.price==null}">
	        				<p:ajax event="change" listener="#{saleEditPage.productQuantityChanged(item)}" process="totalInput" update="grandtotal" oncomplete="refreshFooter();"/>
	        			</pe:inputNumber>
	        			<f:facet name="footer">
	        				<h:outputText id="grandtotal" value="#{saleEditPage.identifiable.cost.value}" />
	        			</f:facet>
	        		</p:column>
	        		
	        		<p:column headerText="#{uiManager.text('field.instance')}" rendered="#{saleEditPage.showInstanceColumn}" width="30%">
	        			<p:selectOneMenu id="instance" value="#{item.instance}" var="instance" converter="#{objectConverter}" 
		        			filter="true" filterMatchMode="contains" disabled="#{saleEditPage.collectMoney}" >
		        			<f:selectItems value="#{item.instanceChoices}" var="spi" itemLabel="#{spi.code}" />
		        			<p:column><h:outputText value="#{instance.code}" /></p:column>
		        		</p:selectOneMenu>
	        			<h:outputText value="#{instance.code}" rendered="#{saleEditPage.collectMoney}" />
	        		</p:column>
	        		
	 			</cyk:itemCollection>
        	
        	</ui:fragment>
        	
        	<p:outputPanel id="moneyPanel" ><ui:fragment rendered="#{saleEditPage.collectMoney}">
        		<company:saleCashRegisterMovement value="#{saleEditPage.cashRegisterController}" />
        	</ui:fragment></p:outputPanel>      	
        </ui:define>
        
        <ui:define name="contentMenuBar">
 			<cyk:command value="#{saleEditPage.form.submitCommandable}" executeParameter="#{saleEditPage.form.data}" />
 		</ui:define>
        
    </ui:decorate>
 
</html>
